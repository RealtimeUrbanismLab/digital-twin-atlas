{"version":3,"file":"component---src-pages-case-studies-list-js-d9a42da0d3e2121f025c.js","mappings":"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","sources":["webpack://digital-twin-atlas/./src/pages/case-studies-list.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport HamburgerMenu from '../components/HamburgerMenu';\r\nimport caseStudies from '../data/caseStudies';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport '../styles/CaseStudiesList.css';\r\nimport defaultImage from '../images/case-studies/case-study.jpg';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport Map from '../components/Map'; // Import the Map component\r\n//import caseStudies from '../data/caseStudies'; // Import the data\r\n\r\n// Register required Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst itemsPerPage = 12; // Number of case studies to load initially and on each scroll\r\n\r\nconst CaseStudiesList = () => {\r\n  const [sortOption, setSortOption] = useState('alphabetical');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [shortListFilter, setShortListFilter] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [visibleCaseStudies, setVisibleCaseStudies] = useState(itemsPerPage);\r\n  const [filters, setFilters] = useState({\r\n    country: '',\r\n    status: '',\r\n  });\r\n  const loadMoreRef = useRef();\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters({ ...filters, [name]: value });\r\n  };\r\n\r\n  // Only access getComputedStyle in browser environment\r\n  let primaryColor, secondaryColor, accentColor1, accentColor2, accentColor3;\r\n  if (typeof window !== 'undefined') {\r\n    primaryColor = getComputedStyle(document.documentElement).getPropertyValue('--primary-color').trim();\r\n    secondaryColor = getComputedStyle(document.documentElement).getPropertyValue('--secondary-color').trim();\r\n    accentColor1 = getComputedStyle(document.documentElement).getPropertyValue('--accent-color-1').trim();\r\n    accentColor2 = getComputedStyle(document.documentElement).getPropertyValue('--accent-color-2').trim();\r\n    accentColor3 = getComputedStyle(document.documentElement).getPropertyValue('--accent-color-3').trim();\r\n  }\r\n\r\n  const sortedCaseStudies = [...caseStudies]\r\n    .filter(study =>\r\n      (shortListFilter ? study.shortList === 'Yes' : true) &&\r\n      (searchQuery === '' || study.name.toLowerCase().includes(searchQuery.toLowerCase())) &&\r\n      (filters.country === '' || study.country === filters.country) &&\r\n      (filters.status === '' || study.FinalStatus === filters.status)\r\n    )\r\n    .sort((a, b) => {\r\n      const order = sortOrder === 'asc' ? 1 : -1;\r\n      switch (sortOption) {\r\n        case 'alphabetical':\r\n          return order * a.name.localeCompare(b.name);\r\n        case 'city':\r\n          return order * a.location.localeCompare(b.location);\r\n        case 'country':\r\n          return order * a.country.localeCompare(b.country);\r\n        case 'area':\r\n          return order * (parseFloat(b['Total Area (km2)']) - parseFloat(a['Total Area (km2)']));\r\n        case 'startYear':\r\n          return order * (a['Start Year'] - b['Start Year']);\r\n        case 'status':\r\n          return order * a.FinalStatus.localeCompare(b.FinalStatus);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n  const paginatedCaseStudies = sortedCaseStudies.slice(0, visibleCaseStudies);\r\n\r\n  // Load more items when scrolling reaches the bottom\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setVisibleCaseStudies((prev) => Math.min(prev + itemsPerPage, sortedCaseStudies.length));\r\n      }\r\n    });\r\n\r\n    if (loadMoreRef.current) {\r\n      observer.observe(loadMoreRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (loadMoreRef.current) {\r\n        observer.unobserve(loadMoreRef.current);\r\n      }\r\n    };\r\n  }, [sortedCaseStudies]);\r\n\r\n  // Data for Charts\r\n  const countryData = {\r\n    labels: [...new Set(caseStudies.map(study => study.country))],\r\n    datasets: [\r\n      {\r\n        label: 'Number of Projects by Country',\r\n        data: [...new Set(caseStudies.map(study => study.country))].map(country =>\r\n          caseStudies.filter(study => study.country === country).length\r\n        ),\r\n        backgroundColor: secondaryColor ? `${secondaryColor}B3` : 'rgba(52, 152, 219, 0.7)', // Fallback color\r\n        borderColor: secondaryColor || 'rgba(52, 152, 219, 1)', // Fallback color\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const statusData = {\r\n    labels: ['Completed', 'In Progress', 'Failed', 'Did Not Start'],\r\n    datasets: [\r\n      {\r\n        label: 'Project Status Distribution',\r\n        data: [\r\n          caseStudies.filter(study => study.FinalStatus === 'Completed').length,\r\n          caseStudies.filter(study => study.FinalStatus === 'In Progress').length,\r\n          caseStudies.filter(study => study.FinalStatus === 'Failed').length,\r\n          caseStudies.filter(study => study.FinalStatus === 'Did Not Start').length,\r\n        ],\r\n        backgroundColor: [\r\n          accentColor1 ? `${accentColor1}B3` : 'rgba(46, 204, 113, 0.7)', // Fallback color\r\n          primaryColor ? `${primaryColor}B3` : 'rgba(52, 152, 219, 0.7)', // Fallback color\r\n          accentColor3 ? `${accentColor3}B3` : 'rgba(231, 76, 60, 0.7)', // Fallback color\r\n          accentColor2 ? `${accentColor2}B3` : 'rgba(155, 89, 182, 0.7)', // Fallback color\r\n        ],\r\n        borderColor: [\r\n          accentColor1 || 'rgba(46, 204, 113, 1)', // Fallback color\r\n          primaryColor || 'rgba(52, 152, 219, 1)', // Fallback color\r\n          accentColor3 || 'rgba(231, 76, 60, 1)', // Fallback color\r\n          accentColor2 || 'rgba(155, 89, 182, 1)', // Fallback color\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n\r\n    // Main Container\r\n    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\r\n      \r\n      {/* Menu */}\r\n      <HamburgerMenu />\r\n      \r\n      {/* Heading */}\r\n      <h1>Case Studies</h1>\r\n\r\n      {/* Filters Section */}\r\n      <div className=\"controls sticky-filters\">\r\n        <div className=\"filters-group\">\r\n          <div className=\"filter-controls\">\r\n            <label>Filters:</label>\r\n            <select name=\"country\" value={filters.country} onChange={handleFilterChange}>\r\n              <option value=\"\">Country: All</option>\r\n              {[...new Set(caseStudies.map(study => study.country))].map(country => (\r\n                <option key={country} value={country}>{country}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"status\" value={filters.status} onChange={handleFilterChange}>\r\n              <option value=\"\">Status: All</option>\r\n              <option value=\"Completed\">Completed</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Failed\">Failed</option>\r\n              <option value=\"Did Not Start\">Did Not Start</option>\r\n            </select>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search case studies...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"sort-toggle-group\">\r\n          <div className=\"toggle-switch\">\r\n            <label className=\"toggle-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={shortListFilter}\r\n                onChange={(e) => setShortListFilter(e.target.checked)}\r\n              />\r\n              <span className=\"slider\"></span>\r\n              <span className=\"toggle-text\">Short List Only</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"toggle-button\">\r\n            <button onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}>\r\n              {sortOrder === 'asc' ? 'Ascending' : 'Descending'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"charts\">\r\n\r\n        <div className=\"chart-wrapper\">\r\n          <h3 className=\"chart-title\">Project Status Distribution</h3>\r\n          <div className=\"chart-container\">\r\n            <Pie data={statusData} options={{ maintainAspectRatio: false }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-wrapper\">\r\n          <h3 className=\"chart-title\">Projects by Country</h3>\r\n          <div className=\"chart-container\">\r\n            <Bar data={countryData} options={{ maintainAspectRatio: false }} />\r\n          </div>\r\n        </div>\r\n\r\n      {/* Case Studies Grid */}\r\n      <div className=\"case-studies-grid\">\r\n        {paginatedCaseStudies.map((study) => (\r\n          <div className=\"card case-study-card\" key={study.id}>\r\n            <Link to={`/case-studies/${study.id}`}>\r\n              <h3 className=\"card-title\">{study.name}</h3>\r\n              <div className=\"image-container\">\r\n                <img\r\n                  src={study.imagePath || defaultImage}\r\n                  alt={study.name}\r\n                  className=\"duotone img\"\r\n                />\r\n                {study.shortList === 'Yes' && <span className=\"shortlist-tag\">Short Listed</span>}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <ul className=\"details-list\">\r\n                  <li><strong>Country:</strong> {study.country || 'N/A'}</li>\r\n                  <li><strong>City:</strong> {study.location || 'N/A'}</li>\r\n                  <li><strong>Total Area:</strong> {study['Total Area (km2)'] || 'N/A'} km²</li>\r\n                  <li>\r\n                    <strong>Status: </strong>\r\n                    <span style={{ color: study.FinalStatus === 'Completed' ? 'green' : study.FinalStatus === 'In Progress' ? 'orange' : 'red' }}>\r\n                      {study.FinalStatus || 'N/A'}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n\r\n      {/* Load More Indicator */}\r\n      <div ref={loadMoreRef} style={{ height: '50px', marginTop: '20px' }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseStudiesList;\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","sortOption","setSortOption","useState","sortOrder","setSortOrder","shortListFilter","setShortListFilter","searchQuery","setSearchQuery","visibleCaseStudies","setVisibleCaseStudies","filters","setFilters","country","status","loadMoreRef","useRef","handleFilterChange","e","name","value","target","primaryColor","secondaryColor","accentColor1","accentColor2","accentColor3","window","getComputedStyle","document","documentElement","getPropertyValue","trim","sortedCaseStudies","caseStudies","filter","study","shortList","toLowerCase","includes","FinalStatus","sort","a","b","order","localeCompare","location","parseFloat","paginatedCaseStudies","slice","useEffect","observer","IntersectionObserver","entries","isIntersecting","prev","Math","min","length","current","observe","unobserve","countryData","labels","Set","datasets","label","data","map","backgroundColor","borderColor","borderWidth","statusData","style","padding","maxWidth","margin","className","onChange","key","type","placeholder","checked","onClick","options","maintainAspectRatio","id","Link","to","src","imagePath","defaultImage","alt","color","ref","height","marginTop"],"sourceRoot":""}