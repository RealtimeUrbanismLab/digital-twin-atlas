{"version":3,"file":"component---src-pages-case-studies-list-v-3-js-937dc80c59d77dbca7f6.js","mappings":"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","sources":["webpack://digital-twin-atlas/./src/pages/case-studies-list-v3.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport HamburgerMenu from '../components/HamburgerMenu';\r\nimport caseStudies from '../data/caseStudies';\r\nimport MapboxGL from 'mapbox-gl';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport '../styles/CaseStudiesList.css';\r\nimport defaultImage from '../images/case-studies/case-study.jpg';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\n// Register required Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst itemsPerPage = 12;\r\n\r\nMapboxGL.accessToken = 'pk.eyJ1IjoicmVhbHRpbWVsYWIiLCJhIjoiY2x6cWUyYmNkMGNyNzJxcTg5ZHB3cmM3aCJ9.GxeOk3BD74C7ElBQZZCguw';\r\n\r\nconst CaseStudiesList = () => {\r\n  const [sortOption, setSortOption] = useState('alphabetical');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [shortListFilter, setShortListFilter] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [visibleCaseStudies, setVisibleCaseStudies] = useState(itemsPerPage);\r\n  const [filters, setFilters] = useState({\r\n    country: '',\r\n    status: '',\r\n    startYear: '',\r\n    endYear: ''\r\n  });\r\n  const [selectedStudyId, setSelectedStudyId] = useState(null);\r\n  const loadMoreRef = useRef();\r\n  const mapContainerRef = useRef(null);\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef([]);\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters({ ...filters, [name]: value });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      country: '',\r\n      status: '',\r\n      startYear: '',\r\n      endYear: ''\r\n    });\r\n    setSearchQuery('');\r\n    setShortListFilter(false);\r\n  };\r\n\r\n  // Initialize Mapbox map\r\n  useEffect(() => {\r\n    if (mapContainerRef.current && !mapRef.current) {\r\n      mapRef.current = new MapboxGL.Map({\r\n        container: mapContainerRef.current,\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        center: [0, 0], // Default center\r\n        zoom: 2, // Default zoom level\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const updateMapMarkers = (studies) => {\r\n    if (mapRef.current) {\r\n      // Remove existing markers\r\n      markersRef.current.forEach(marker => marker.remove());\r\n      markersRef.current = [];\r\n\r\n      const bounds = new MapboxGL.LngLatBounds();\r\n\r\n      studies.forEach((study) => {\r\n        if (study.lat && study.lng) {\r\n          const marker = new MapboxGL.Marker()\r\n            .setLngLat([study.lng, study.lat])\r\n            .setPopup(new MapboxGL.Popup({ offset: 25 }).setText(study.name))\r\n            .addTo(mapRef.current);\r\n\r\n          marker.getElement().addEventListener('click', () => {\r\n            setSelectedStudyId(study.id);\r\n          });\r\n\r\n          markersRef.current.push(marker);\r\n          bounds.extend([study.lng, study.lat]);\r\n        }\r\n      });\r\n\r\n      if (studies.length > 0 && !bounds.isEmpty()) {\r\n        mapRef.current.fitBounds(bounds, { padding: 50 });\r\n      } else {\r\n        mapRef.current.setCenter([0, 0]);\r\n        mapRef.current.setZoom(2);\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredCaseStudies = [...caseStudies]\r\n    .filter(study =>\r\n      (shortListFilter ? study.shortList === 'Yes' : true) &&\r\n      (searchQuery === '' || study.name.toLowerCase().includes(searchQuery.toLowerCase())) &&\r\n      (filters.country === '' || study.country === filters.country) &&\r\n      (filters.status === '' || study.FinalStatus === filters.status) &&\r\n      (filters.startYear === '' || study['Start Year'] >= filters.startYear) &&\r\n      (filters.endYear === '' || study['End Year'] <= filters.endYear || study['End Year'] === 'N/A')\r\n    )\r\n    .sort((a, b) => {\r\n      const order = sortOrder === 'asc' ? 1 : -1;\r\n      switch (sortOption) {\r\n        case 'alphabetical':\r\n          return order * a.name.localeCompare(b.name);\r\n        case 'city':\r\n          return order * a.location.localeCompare(b.location);\r\n        case 'country':\r\n          return order * a.country.localeCompare(b.country);\r\n        case 'area':\r\n          return order * (parseFloat(b['Total Area (km2)']) - parseFloat(a['Total Area (km2)']));\r\n        case 'startYear':\r\n          return order * (a['Start Year'] - b['Start Year']);\r\n        case 'status':\r\n          return order * a.FinalStatus.localeCompare(b.FinalStatus);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n  const paginatedCaseStudies = filteredCaseStudies.slice(0, visibleCaseStudies);\r\n\r\n  useEffect(() => {\r\n    updateMapMarkers(filteredCaseStudies.slice(0, visibleCaseStudies));\r\n  }, [filters, searchQuery, shortListFilter, sortOrder, sortOption, visibleCaseStudies]);\r\n\r\n  // Load more items when scrolling reaches the bottom\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setVisibleCaseStudies((prev) => Math.min(prev + itemsPerPage, filteredCaseStudies.length));\r\n      }\r\n    });\r\n\r\n    if (loadMoreRef.current) {\r\n      observer.observe(loadMoreRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (loadMoreRef.current) {\r\n        observer.unobserve(loadMoreRef.current);\r\n      }\r\n    };\r\n  }, [filteredCaseStudies]);\r\n\r\n  // Only access getComputedStyle in browser environment\r\n  let primaryColor, secondaryColor, accentColor1, accentColor2, accentColor3;\r\n  if (typeof window !== 'undefined') {\r\n    primaryColor = getComputedStyle(document.documentElement).getPropertyValue('--primary-color').trim();\r\n    secondaryColor = getComputedStyle(document.documentElement).getPropertyValue('--secondary-color').trim();\r\n    accentColor1 = getComputedStyle(document.documentElement).getPropertyValue('--accent-color-1').trim();\r\n    accentColor2 = getComputedStyle(document.documentElement).getPropertyValue('--accent-color-2').trim();\r\n    accentColor3 = getComputedStyle(document.documentElement).getPropertyValue('--accent-color-3').trim();\r\n  }\r\n\r\n  // Data for Charts\r\n  const countryData = {\r\n    labels: [...new Set(caseStudies.map(study => study.country))],\r\n    datasets: [\r\n      {\r\n        label: 'Number of Projects by Country',\r\n        data: [...new Set(caseStudies.map(study => study.country))].map(country =>\r\n          caseStudies.filter(study => study.country === country).length\r\n        ),\r\n        backgroundColor: secondaryColor ? `${secondaryColor}B3` : 'rgba(52, 152, 219, 0.7)', // Fallback color\r\n        borderColor: secondaryColor || 'rgba(52, 152, 219, 1)', // Fallback color\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const statusData = {\r\n    labels: ['Completed', 'In Progress', 'Failed', 'Did Not Start'],\r\n    datasets: [\r\n      {\r\n        label: 'Project Status Distribution',\r\n        data: [\r\n          caseStudies.filter(study => study.FinalStatus === 'Completed').length,\r\n          caseStudies.filter(study => study.FinalStatus === 'In Progress').length,\r\n          caseStudies.filter(study => study.FinalStatus === 'Failed').length,\r\n          caseStudies.filter(study => study.FinalStatus === 'Did Not Start').length,\r\n        ],\r\n        backgroundColor: [\r\n          accentColor1 ? `${accentColor1}B3` : 'rgba(46, 204, 113, 0.7)', // Fallback color\r\n          primaryColor ? `${primaryColor}B3` : 'rgba(52, 152, 219, 0.7)', // Fallback color\r\n          accentColor3 ? `${accentColor3}B3` : 'rgba(231, 76, 60, 0.7)', // Fallback color\r\n          accentColor2 ? `${accentColor2}B3` : 'rgba(155, 89, 182, 0.7)', // Fallback color\r\n        ],\r\n        borderColor: [\r\n          accentColor1 || 'rgba(46, 204, 113, 1)', // Fallback color\r\n          primaryColor || 'rgba(52, 152, 219, 1)', // Fallback color\r\n          accentColor3 || 'rgba(231, 76, 60, 1)', // Fallback color\r\n          accentColor2 || 'rgba(155, 89, 182, 1)', // Fallback color\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const CaseStudyOverlay = ({ study, onClose }) => (\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-content\">\r\n        <button className=\"close-button\" onClick={onClose}>Close</button>\r\n        <h3>{study.name}</h3>\r\n        <img src={study.imagePath || defaultImage} alt={study.name} className=\"duotone img\" />\r\n        <ul className=\"details-list\">\r\n          <li><strong>Country:</strong> {study.country || 'N/A'}</li>\r\n          <li><strong>City:</strong> {study.location || 'N/A'}</li>\r\n          <li><strong>Creators:</strong> {study['Creators'] || 'N/A'}</li>\r\n          <li><strong>Total Area:</strong> {study['Total Area (km2)'] || 'N/A'} km²</li>\r\n          <li><strong>Platform/Organization:</strong> {study['Platform/Organization'] || 'N/A'}</li>\r\n          <li><strong>System Digital Twinned:</strong> {study['System Digital Twinned'] || 'N/A'}</li>\r\n          <li><strong>3D Platform Features:</strong> {study['3D Platform Features'] || 'N/A'}</li>\r\n          <li><span style={{ color: study.FinalStatus === 'Completed' ? 'green' : study.FinalStatus === 'In Progress' ? 'orange' : 'red' }}>\r\n            <strong>Status: </strong>{study.FinalStatus || 'N/A'}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\r\n      <HamburgerMenu />\r\n      <h1>Case Studies</h1>\r\n\r\n      <div className=\"controls sticky-filters\">\r\n        <div className=\"filters-group\">\r\n          <div className=\"filter-controls\">\r\n            <label>Filters:</label>\r\n            <select name=\"country\" value={filters.country} onChange={handleFilterChange}>\r\n              <option value=\"\">Country: All</option>\r\n              {[...new Set(caseStudies.map(study => study.country))].map(country => (\r\n                <option key={country} value={country}>{country}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"status\" value={filters.status} onChange={handleFilterChange}>\r\n              <option value=\"\">Status: All</option>\r\n              <option value=\"Completed\">Completed</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Failed\">Failed</option>\r\n              <option value=\"Did Not Start\">Did Not Start</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              name=\"startYear\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Start Year\"\r\n              value={filters.startYear}\r\n              onChange={(e) => handleFilterChange(e)}\r\n              min=\"1900\"\r\n              max=\"2100\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"endYear\"\r\n              className=\"search-bar\"\r\n              placeholder=\"End Year\"\r\n              value={filters.endYear}\r\n              onChange={(e) => handleFilterChange(e)}\r\n              min=\"1900\"\r\n              max=\"2100\"\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search case studies...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n          <button onClick={clearFilters} className=\"clear-filters-button\">Clear Filters</button>\r\n        </div>\r\n\r\n        <div className=\"sort-toggle-group\">\r\n          <div className=\"toggle-switch\">\r\n            <label className=\"toggle-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={shortListFilter}\r\n                onChange={(e) => setShortListFilter(e.target.checked)}\r\n              />\r\n              <span className=\"slider\"></span>\r\n              <span className=\"toggle-text\">Short List Only</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"toggle-button\">\r\n            <button onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}>\r\n              {sortOrder === 'asc' ? 'Ascending' : 'Descending'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"charts\">\r\n        <div className=\"chart-wrapper\">\r\n          <h3 className=\"chart-title\">Project Status Distribution</h3>\r\n          <div className=\"chart-container\">\r\n            <Pie data={statusData} options={{ maintainAspectRatio: false }} />\r\n          </div>\r\n        </div>\r\n        <div className=\"chart-wrapper\">\r\n          <h3 className=\"chart-title\">Projects by Country</h3>\r\n          <div className=\"chart-container\">\r\n            <Bar data={countryData} options={{ maintainAspectRatio: false }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"map-container1\">\r\n        <div id=\"map\" ref={mapContainerRef}></div>\r\n      </div>\r\n\r\n      <div className=\"case-studies-grid\">\r\n        {paginatedCaseStudies.map((study) => (\r\n          <div\r\n            className={`card case-study-card ${study.id === selectedStudyId ? 'selected' : ''}`}\r\n            key={study.id}\r\n            onClick={() => setSelectedStudyId(study.id)}\r\n          >\r\n            <h3 className=\"card-title\">{study.name}</h3>\r\n            <div className=\"image-container\">\r\n              <img\r\n                src={study.imagePath || defaultImage}\r\n                alt={study.name}\r\n                className=\"duotone img\"\r\n              />\r\n              {study.shortList === 'Yes' && <span className=\"shortlist-tag\">Short Listed</span>}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <ul className=\"details-list\">\r\n                <li><strong>Country:</strong> {study.country || 'N/A'}</li>\r\n                <li><strong>City:</strong> {study.location || 'N/A'}</li>\r\n                <li><strong>Creators:</strong> {study['Creators'] || 'N/A'}</li>\r\n                <li><strong>Total Area:</strong> {study['Total Area (km2)'] || 'N/A'} km²</li>\r\n                <li><strong>Platform/Organization:</strong> {study['Platform/Organization'] || 'N/A'}</li>\r\n                <li><strong>System Digital Twinned:</strong> {study['System Digital Twinned'] || 'N/A'}</li>\r\n                <li><strong>3D Platform Features:</strong> {study['3D Platform Features'] || 'N/A'}</li>\r\n                <li><span style={{ color: study.FinalStatus === 'Completed' ? 'green' : study.FinalStatus === 'In Progress' ? 'orange' : 'red' }}>\r\n                  <strong>Status: </strong>{study.FinalStatus || 'N/A'}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div ref={loadMoreRef} style={{ height: '50px', marginTop: '20px' }}></div>\r\n\r\n      {selectedStudyId && (\r\n        <CaseStudyOverlay\r\n          study={caseStudies.find(study => study.id === selectedStudyId)}\r\n          onClose={() => setSelectedStudyId(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseStudiesList;\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","MapboxGL","sortOption","setSortOption","useState","sortOrder","setSortOrder","shortListFilter","setShortListFilter","searchQuery","setSearchQuery","visibleCaseStudies","setVisibleCaseStudies","filters","setFilters","country","status","startYear","endYear","selectedStudyId","setSelectedStudyId","loadMoreRef","useRef","mapContainerRef","mapRef","markersRef","handleFilterChange","e","name","value","target","useEffect","current","container","style","center","zoom","filteredCaseStudies","caseStudies","filter","study","shortList","toLowerCase","includes","FinalStatus","sort","a","b","order","localeCompare","location","parseFloat","paginatedCaseStudies","slice","primaryColor","secondaryColor","accentColor1","accentColor2","accentColor3","studies","forEach","marker","remove","bounds","lat","lng","setLngLat","setPopup","offset","setText","addTo","getElement","addEventListener","id","push","extend","length","isEmpty","fitBounds","padding","setCenter","setZoom","updateMapMarkers","observer","IntersectionObserver","entries","isIntersecting","prev","Math","min","observe","unobserve","window","getComputedStyle","document","documentElement","getPropertyValue","trim","countryData","labels","Set","datasets","label","data","map","backgroundColor","borderColor","borderWidth","statusData","CaseStudyOverlay","onClose","className","onClick","src","imagePath","defaultImage","alt","color","maxWidth","margin","onChange","key","type","placeholder","max","checked","options","maintainAspectRatio","ref","height","marginTop"],"sourceRoot":""}