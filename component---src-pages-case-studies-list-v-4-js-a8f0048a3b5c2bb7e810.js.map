{"version":3,"file":"component---src-pages-case-studies-list-v-4-js-a8f0048a3b5c2bb7e810.js","mappings":"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","sources":["webpack://digital-twin-atlas/./src/pages/case-studies-list-v4.js","webpack://digital-twin-atlas/./src/images/case-studies/case-study.jpg"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MapboxGL from 'mapbox-gl';\r\nimport HamburgerMenu from '../components/HamburgerMenu';\r\nimport caseStudies from '../data/caseStudies';\r\nimport '../styles/CaseStudiesList.css';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport defaultImage from '../images/case-studies/case-study.jpg';\r\n\r\nMapboxGL.accessToken = 'pk.eyJ1IjoicmVhbHRpbWVsYWIiLCJhIjoiY2x6cWUyYmNkMGNyNzJxcTg5ZHB3cmM3aCJ9.GxeOk3BD74C7ElBQZZCguw';\r\n\r\nconst CaseStudiesList = () => {\r\n  const [filters, setFilters] = useState({\r\n    country: '',\r\n    status: '',\r\n    startYear: '',\r\n    endYear: ''\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [shortListFilter, setShortListFilter] = useState(false);\r\n  const [selectedStudyId, setSelectedStudyId] = useState(null);\r\n  const mapContainerRef = useRef(null);\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef([]);\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters({ ...filters, [name]: value });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      country: '',\r\n      status: '',\r\n      startYear: '',\r\n      endYear: ''\r\n    });\r\n    setSearchQuery('');\r\n    setShortListFilter(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mapContainerRef.current && !mapRef.current) {\r\n      mapRef.current = new MapboxGL.Map({\r\n        container: mapContainerRef.current,\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        center: [0, 0], \r\n        zoom: 2,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const updateMapMarkers = (studies) => {\r\n    if (mapRef.current) {\r\n      markersRef.current.forEach(marker => marker.remove());\r\n      markersRef.current = [];\r\n\r\n      const bounds = new MapboxGL.LngLatBounds();\r\n\r\n      studies.forEach((study) => {\r\n        if (study.lat && study.lng) {\r\n          const marker = new MapboxGL.Marker()\r\n            .setLngLat([study.lng, study.lat])\r\n            .setPopup(new MapboxGL.Popup({ offset: 25 })\r\n              .setHTML(`\r\n                <h3>${study.name}</h3>\r\n                <p><strong>Location:</strong> ${study.location}, ${study.country}</p>\r\n                <p><strong>Status:</strong> ${study.FinalStatus}</p>\r\n                <button id=\"learn-more-${study.id}\" class=\"learn-more-button\">Learn More</button>\r\n              `))\r\n            .addTo(mapRef.current);\r\n\r\n          marker.getElement().addEventListener('click', () => {\r\n            setSelectedStudyId(study.id);\r\n          });\r\n\r\n          markersRef.current.push(marker);\r\n          bounds.extend([study.lng, study.lat]);\r\n\r\n          mapRef.current.on('render', () => {\r\n            const learnMoreButton = document.getElementById(`learn-more-${study.id}`);\r\n            if (learnMoreButton) {\r\n              learnMoreButton.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n                setSelectedStudyId(study.id);\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      if (studies.length > 0 && !bounds.isEmpty()) {\r\n        mapRef.current.fitBounds(bounds, { padding: 50 });\r\n      } else {\r\n        mapRef.current.setCenter([0, 0]);\r\n        mapRef.current.setZoom(2);\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredCaseStudies = caseStudies\r\n    .filter(study =>\r\n      (shortListFilter ? study.shortList === 'Yes' : true) &&\r\n      (searchQuery === '' || study.name.toLowerCase().includes(searchQuery.toLowerCase())) &&\r\n      (filters.country === '' || study.country === filters.country) &&\r\n      (filters.status === '' || study.FinalStatus === filters.status) &&\r\n      (filters.startYear === '' || study['Start Year'] >= filters.startYear) &&\r\n      (filters.endYear === '' || study['End Year'] <= filters.endYear || study['End Year'] === 'N/A')\r\n    );\r\n\r\n  useEffect(() => {\r\n    updateMapMarkers(filteredCaseStudies);\r\n  }, [filters, searchQuery, shortListFilter]);\r\n\r\n  const CaseStudyOverlay = ({ study, onClose }) => (\r\n    <div className=\"overlay\">\r\n      <div className=\"overlay-content\">\r\n        <button className=\"close-button\" onClick={onClose}>Close</button>\r\n        <h1>{study.name}</h1>      \r\n        <img\r\n          src={study.imagePath || defaultImage}\r\n          alt={study.name}\r\n          style={{ maxWidth: '100%', borderRadius: '0px', marginTop: '20px' }}\r\n          className=\"duotone img\"\r\n        />\r\n        <div className=\"overlay-details\">\r\n          <p><strong>Location:</strong> {study.location}, {study.country}</p>\r\n          <p><strong>Coordinates:</strong> {study.lat}, {study.lng}</p>\r\n          <p><strong>Description:</strong> {study.Description}</p>\r\n          <p><strong>Total Area:</strong> {study['Total Area (km2)']} kmÂ²</p>\r\n          <p><strong>System Digital Twinned:</strong> {study['System Digital Twinned']}</p>\r\n          <p><strong>Start Year:</strong> {study['Start Year']}</p>\r\n          <p><strong>End Year:</strong> {study['End Year']}</p>\r\n          <p><strong>Creators:</strong> {study.Creators}</p>\r\n          <p><strong>Clients/Sponsors:</strong> {study['Clients/Sponsors']}</p>\r\n          <p><strong>Users:</strong> {study.Users}</p>\r\n          <p><strong>Status:</strong> {study.Status}</p>\r\n          <p><strong>Project State:</strong> {study['Project State']}</p>\r\n          <p><strong>Platform/Organization:</strong> {study['Platform/Organization']}</p>\r\n          <p><strong>Shortlisted:</strong> {study.shortList}</p>\r\n          <p><strong>3D Platform:</strong> {study[\"3D Platform\"]}</p>\r\n          <p><strong>3D Platform Features:</strong> {study[\"3D Platform Features\"]}</p>\r\n          <p><strong>3D Platform to Physical City Control:</strong> {study[\"3D Platform to Physical City Control\"]}</p>\r\n          <p><strong>Decision Making:</strong> {study['Decision Making']}</p>\r\n          <p><strong>Contested Claims/Challenges:</strong> {study['Contested Claims/Challenges']}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ position: 'relative', height: '100vh', width: '100vw' }}>\r\n      <div className=\"hamburger-overlay\">\r\n        <HamburgerMenu />\r\n      </div>\r\n  \r\n      <div className=\"controls-overlay\">\r\n        <div className=\"filters-group\">\r\n          <div className=\"filter-controls\">\r\n            <select name=\"country\" value={filters.country} onChange={handleFilterChange}>\r\n              <option value=\"\">Country: All</option>\r\n              {[...new Set(caseStudies.map(study => study.country))].map(country => (\r\n                <option key={country} value={country}>{country}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"status\" value={filters.status} onChange={handleFilterChange}>\r\n              <option value=\"\">Status: All</option>\r\n              <option value=\"Completed\">Completed</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Failed\">Failed</option>\r\n              <option value=\"Did Not Start\">Did Not Start</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              name=\"startYear\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Start Year\"\r\n              value={filters.startYear}\r\n              onChange={(e) => handleFilterChange(e)}\r\n              min=\"1900\"\r\n              max=\"2100\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"endYear\"\r\n              className=\"search-bar\"\r\n              placeholder=\"End Year\"\r\n              value={filters.endYear}\r\n              onChange={(e) => handleFilterChange(e)}\r\n              min=\"1900\"\r\n              max=\"2100\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search case studies...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"toggle-switch\">\r\n          <button onClick={clearFilters} className=\"clear-filters-button\">Clear Filters</button>\r\n          <label className=\"toggle-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={shortListFilter}\r\n              onChange={(e) => setShortListFilter(e.target.checked)}\r\n            />\r\n            <span className=\"slider\"></span>\r\n            <span className=\"toggle-text\">Short List Only</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n  \r\n      <div className=\"map-container\">\r\n        <div id=\"map\" ref={mapContainerRef} />\r\n      </div>\r\n  \r\n      {selectedStudyId && (\r\n        <CaseStudyOverlay\r\n          study={caseStudies.find(study => study.id === selectedStudyId)}\r\n          onClose={() => setSelectedStudyId(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default CaseStudiesList;\r\n","export default __webpack_public_path__ + \"static/case-study-549211e00c5534194427f6508fde92ed.jpg\";"],"names":["MapboxGL","filters","setFilters","useState","country","status","startYear","endYear","searchQuery","setSearchQuery","shortListFilter","setShortListFilter","selectedStudyId","setSelectedStudyId","mapContainerRef","useRef","mapRef","markersRef","handleFilterChange","e","name","value","target","useEffect","current","container","style","center","zoom","filteredCaseStudies","caseStudies","study","shortList","toLowerCase","includes","FinalStatus","studies","forEach","marker","remove","bounds","lat","lng","setLngLat","setPopup","offset","setHTML","location","id","addTo","getElement","addEventListener","push","extend","on","learnMoreButton","document","getElementById","stopPropagation","length","isEmpty","fitBounds","padding","setCenter","setZoom","updateMapMarkers","CaseStudyOverlay","onClose","className","onClick","src","imagePath","defaultImage","alt","maxWidth","borderRadius","marginTop","Description","Creators","Users","Status","position","height","width","onChange","Set","map","key","type","placeholder","min","max","checked","ref"],"sourceRoot":""}